// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybrid.network.implementation;

import com.azure.core.management.SubResource;
import com.azure.resourcemanager.hybrid.network.fluent.models.BackendAddressPoolInner;
import com.azure.resourcemanager.hybrid.network.fluent.models.NetworkInterfaceIpConfigurationInner;
import com.azure.resourcemanager.hybrid.network.models.BackendAddressPool;
import com.azure.resourcemanager.hybrid.network.models.NetworkInterfaceIpConfiguration;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

public final class BackendAddressPoolImpl implements BackendAddressPool {
    private BackendAddressPoolInner innerObject;

    private final com.azure.resourcemanager.hybrid.network.NetworkManager serviceManager;

    BackendAddressPoolImpl(
        BackendAddressPoolInner innerObject,
        com.azure.resourcemanager.hybrid.network.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public List<NetworkInterfaceIpConfiguration> backendIpConfigurations() {
        List<NetworkInterfaceIpConfigurationInner> inner = this.innerModel().backendIpConfigurations();
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new NetworkInterfaceIpConfigurationImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public List<SubResource> loadBalancingRules() {
        List<SubResource> inner = this.innerModel().loadBalancingRules();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public SubResource outboundRule() {
        return this.innerModel().outboundRule();
    }

    public List<SubResource> outboundRules() {
        List<SubResource> inner = this.innerModel().outboundRules();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public BackendAddressPoolInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.hybrid.network.NetworkManager manager() {
        return this.serviceManager;
    }
}
