// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybrid.network.implementation;

import com.azure.resourcemanager.hybrid.network.fluent.models.InterfaceEndpointInner;
import com.azure.resourcemanager.hybrid.network.fluent.models.NetworkInterfaceInner;
import com.azure.resourcemanager.hybrid.network.fluent.models.SubnetInner;
import com.azure.resourcemanager.hybrid.network.models.EndpointService;
import com.azure.resourcemanager.hybrid.network.models.InterfaceEndpoint;
import com.azure.resourcemanager.hybrid.network.models.NetworkInterface;
import com.azure.resourcemanager.hybrid.network.models.Subnet;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public final class InterfaceEndpointImpl implements InterfaceEndpoint {
    private InterfaceEndpointInner innerObject;

    private final com.azure.resourcemanager.hybrid.network.NetworkManager serviceManager;

    InterfaceEndpointImpl(
        InterfaceEndpointInner innerObject,
        com.azure.resourcemanager.hybrid.network.NetworkManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public String fqdn() {
        return this.innerModel().fqdn();
    }

    public EndpointService endpointService() {
        return this.innerModel().endpointService();
    }

    public Subnet subnet() {
        SubnetInner inner = this.innerModel().subnet();
        if (inner != null) {
            return new SubnetImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public List<NetworkInterface> networkInterfaces() {
        List<NetworkInterfaceInner> inner = this.innerModel().networkInterfaces();
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new NetworkInterfaceImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public String owner() {
        return this.innerModel().owner();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String id() {
        return this.innerModel().id();
    }

    public InterfaceEndpointInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.hybrid.network.NetworkManager manager() {
        return this.serviceManager;
    }
}
