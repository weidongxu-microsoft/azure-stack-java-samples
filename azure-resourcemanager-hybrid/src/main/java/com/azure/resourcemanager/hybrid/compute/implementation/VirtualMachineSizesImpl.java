// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.hybrid.compute.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.hybrid.compute.fluent.VirtualMachineSizesClient;
import com.azure.resourcemanager.hybrid.compute.fluent.models.VirtualMachineSizeInner;
import com.azure.resourcemanager.hybrid.compute.models.VirtualMachineSize;
import com.azure.resourcemanager.hybrid.compute.models.VirtualMachineSizes;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class VirtualMachineSizesImpl implements VirtualMachineSizes {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(VirtualMachineSizesImpl.class);

    private final VirtualMachineSizesClient innerClient;

    private final com.azure.resourcemanager.hybrid.compute.ComputeManager serviceManager;

    public VirtualMachineSizesImpl(
        VirtualMachineSizesClient innerClient,
        com.azure.resourcemanager.hybrid.compute.ComputeManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<VirtualMachineSize> list(String location) {
        PagedIterable<VirtualMachineSizeInner> inner = this.serviceClient().list(location);
        return Utils.mapPage(inner, inner1 -> new VirtualMachineSizeImpl(inner1, this.manager()));
    }

    public PagedIterable<VirtualMachineSize> list(String location, Context context) {
        PagedIterable<VirtualMachineSizeInner> inner = this.serviceClient().list(location, context);
        return Utils.mapPage(inner, inner1 -> new VirtualMachineSizeImpl(inner1, this.manager()));
    }

    private VirtualMachineSizesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.hybrid.compute.ComputeManager manager() {
        return this.serviceManager;
    }
}
